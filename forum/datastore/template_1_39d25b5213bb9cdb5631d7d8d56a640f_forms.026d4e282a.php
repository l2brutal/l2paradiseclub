<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_nexus_global_forms extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '219a465162417b884b4278d1aeb82cb2';\n\tfunction amexExpressCheckout( $field, $gateway, $clientId ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller=\"nexus.global.gateways.stripeamex\" data-id=\"\nCONTENT;\n$return .= htmlspecialchars( $gateway->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsType_center\" \nCONTENT;\n\nif ( $field->htmlId ):\n$return .= <<<CONTENT\nid=\"\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<noscript>\n\t\t<div class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_requires_js', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<\/noscript>\n\t\nCONTENT;\n\nif ( \\IPS\\NEXUS_TEST_GATEWAYS ):\n$return .= <<<CONTENT\n\n\t\t<amex:init client_id=\"86a947f9-098d-4a9c-a0ef-22f30f3322fa\" env=\"qa\" callback=\"aecCallbackHandler\" button_color=\"light\"\/>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<amex:init client_id=\"\nCONTENT;\n$return .= htmlspecialchars( $clientId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" env=\"production\" callback=\"aecCallbackHandler\"\/>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<input type='hidden' name=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\" data-role=\"value\">\n\t<div id=\"amex-express-checkout\"><\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction combined( $name, $field1, $field2 ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\">\n<div class=\"ipsClearfix\">\n\t<div class=\"ipsPos_left\">\n\t\t{$field1->html()}\n\t<\/div>\n\t<div class=\"ipsPos_left\">\n\t\t&nbsp;&nbsp;&nbsp;\n\t<\/div>\n\t<div class=\"ipsPos_left\">\n\t\t<div id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unit\">\n\t\t\t{$field2->html()}\n\t\t\t\nCONTENT;\n\nif ( $name === 'f_maxmind' ):\n$return .= <<<CONTENT\n\n\t\t\t\t&nbsp;\/ 100\n\t\t\t\nCONTENT;\n\nelseif ( $name === 'f_maxmind_proxy' ):\n$return .= <<<CONTENT\n\n\t\t\t\t&nbsp;\/ 4\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction creditCard( $field, $types, $number, $expMonth, $expYear, $ccv, $storedCards ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div \nCONTENT;\n\nif ( $field->htmlId ):\n$return .= <<<CONTENT\nid=\"\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n class='ipsBox ipsPad'>\n\t\nCONTENT;\n\nif ( $field->options['jsRequired'] ):\n$return .= <<<CONTENT\n\n\t\t<noscript>\n\t\t\t<div class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_requires_js', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t<\/noscript>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $field->options['attr'] ):\n$return .= <<<CONTENT\n\n\t\t<div \nCONTENT;\n\nforeach ( $field->options['attr'] as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( count( $storedCards ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsFieldRow ipsSpacer_half'>\n\t\t\t\t<ul class='ipsFieldRow_content ipsField_fieldList'>\n\t\t\t\t\t\nCONTENT;\n\n$j = 0;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $storedCards as $i => $card ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<input type='radio' name=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[stored]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $card->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_stored\nCONTENT;\n$return .= htmlspecialchars( $i, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $j === 0 ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t<div class='ipsField_fieldList_content'>\n\t\t\t\t\t\t\t\t<label for='\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_stored\nCONTENT;\n$return .= htmlspecialchars( $i, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><span class='ipsType_light'>xxxx<\/span>\nCONTENT;\n$return .= htmlspecialchars( $card->card->lastFour, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/label><br>\n\t\t\t\t\t\t\t\t<span class='ipsFieldRow_desc'>\nCONTENT;\n\nif ( $card->card->type ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"card_type_{$card->card->type}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $card->card->expMonth ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_expires_lc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $card->card->expMonth, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\/\nCONTENT;\n$return .= htmlspecialchars( $card->card->expYear, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\n$j++;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<input type='radio' name=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[stored]\" value=\"0\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_stored0\" data-control=\"toggle\" data-toggles=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_new\">\n\t\t\t\t\t\t<div class='ipsField_fieldList_content'>\n\t\t\t\t\t\t\t<label for='\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_stored0'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'use_new_card', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label><br>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t\t<div id='\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_new' class=\"ipsHide\">\n\t\t\t\t<hr class='ipsHr'>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( count( $types ) ):\n$return .= <<<CONTENT\n\n\t\t<ul class='ipsList_inline ipsList_noSpacing ipsSpacer_bottom cPayment_cardTypeList'>\n\t\t\t\nCONTENT;\n\nforeach ( $types as $key => $lang ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><span class='cPayment cPayment_\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"{$lang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class='ipsFieldRow \nCONTENT;\n\nif ( $field->error == 'card_number_invalid' ):\n$return .= <<<CONTENT\nipsFieldRow_error\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t<label class='ipsFieldRow_label' for='elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-number'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_number', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <span class='ipsFieldRow_required'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/label>\n\t\t<div class='ipsFieldRow_content'>\n\t\t\t\nCONTENT;\n\nif ( $field->options['dummy'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsField_dummy ipsField_fullWidth ipsField_primary\" id=\"elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-number\" data-role=\"dummyCard\"><\/div>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"text\" class='ipsField_fullWidth ipsField_primary' \nCONTENT;\n\nif ( $field->options['names'] ):\n$return .= <<<CONTENT\nname=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[number]\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-card=\"number\" id=\"elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-number\" maxlength=\"16\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $number, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t<br>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<span class=\"ipsType_warning\" data-warning=\"number\">\nCONTENT;\n\nif ( $field->error and !in_array( $field->error, array( 'card_expire_expired', 'ccv_invalid', 'ccv_invalid_3', 'ccv_invalid_4' ) ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$field->error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/div>\n\t<\/div>\n\t<div class='ipsGrid ipsSpacer_bottom'>\n\t\t<div class='ipsGrid_span7 cNexusCard_expiry'>\n\t\t\t<div class='ipsFieldRow \nCONTENT;\n\nif ( $field->error == 'card_expire_expired' ):\n$return .= <<<CONTENT\nipsFieldRow_error\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t<label class='ipsFieldRow_label' for='elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-exp_month'>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_expire', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <span class='ipsFieldRow_required'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $field->options['dummy'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class=\"ipsField_dummy\" id=\"elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-exp\" data-role=\"dummyExp\"><\/div>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<select \nCONTENT;\n\nif ( $field->options['names'] ):\n$return .= <<<CONTENT\nname=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[exp_month]\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-card=\"exp_month\" id=\"elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-exp_month\">\n\t\t\t\t\t\t\t<option \nCONTENT;\n\nif ( $expMonth === NULL ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n disabled>MM<\/option>\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( range( 1, 12 ) as $m ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $m, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $expMonth === $m ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= htmlspecialchars( str_pad( $m, 2, '0', STR_PAD_LEFT ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/select>\n\t\t\t\t\t\t<select \nCONTENT;\n\nif ( $field->options['names'] ):\n$return .= <<<CONTENT\nname=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[exp_year]\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-card=\"exp_year\" id=\"elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-exp_year\">\n\t\t\t\t\t\t\t<option \nCONTENT;\n\nif ( $expYear === NULL ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n disabled>YYYY<\/option>\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( range( date('Y'), date('Y') + 10 ) as $y ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $y, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $expYear === $y ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $y, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/select>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<span class=\"ipsType_warning\" data-warning=\"exp\">\nCONTENT;\n\nif ( $field->error == 'card_expire_expired' ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$field->error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class='ipsGrid_span5'>\n\t\t\t<div class='ipsFieldRow \nCONTENT;\n\nif ( $field->error == 'ccv_invalid' or $field->error == 'ccv_invalid_3' or $field->error == 'ccv_invalid_4' ):\n$return .= <<<CONTENT\nipsFieldRow_error\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t<label class='ipsFieldRow_label' for='elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-number'>\n\t\t\t\t\t<span title=\"\nCONTENT;\n\nif ( array_key_exists( \\IPS\\nexus\\CreditCard::TYPE_AMERICAN_EXPRESS, $types ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_ccv_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_ccv_desc_no_amex', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-ipsTooltip>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_ccv', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>  <span class='ipsFieldRow_required'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $field->options['dummy'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div class=\"ipsField_dummy\" id=\"elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-ccv\" data-role=\"dummyCcv\"><\/div>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<input type=\"text\" size='4' \nCONTENT;\n\nif ( $field->options['names'] ):\n$return .= <<<CONTENT\nname=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[ccv]\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-card=\"ccv\" id=\"elInput_\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-ccv\" maxlength=\"4\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $ccv, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t<span class=\"ipsType_warning\" data-warning=\"ccv\">\nCONTENT;\n\nif ( $field->error == 'ccv_invalid' or $field->error == 'ccv_invalid_3' or $field->error == 'ccv_invalid_4' ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$field->error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t\nCONTENT;\n\nif ( $field->options['save'] ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsFieldRow ipsFieldRow_checkbox'>\n\t\t\t<input type='checkbox' name=\"\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[save]\" value=\"1\" id='el\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nSave' checked> \n\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t<label for='el\nCONTENT;\n$return .= htmlspecialchars( $field->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nSave'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_save', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( count( $storedCards ) ):\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $field->options['attr'] ):\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction length( $name, $amount=0, $unit='cm' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[amount]\" size=\"4\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $amount, 2, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short\" step=\"0.01\">\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[unit]\">\n\t<option value=\"cm\" \nCONTENT;\n\nif ( $unit == 'cm' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cm', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"in\" \nCONTENT;\n\nif ( $unit == 'in' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'inches', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction money( $name, $value, $options ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( \\IPS\\nexus\\Money::currencies() as $currency ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$decimals = \\IPS\\nexus\\Money::numberOfDecimalsForCurrency( $currency );\n$return .= <<<CONTENT\n\n\t<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $currency, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" size=\"4\" value=\"\nCONTENT;\n\nif ( isset($value[$currency]) AND $value !== '*' ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( number_format( is_object( $value[$currency] ) ? (string) $value[$currency]->amount : $value[$currency], $decimals, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" class=\"ipsField_short\" step=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format(1\/pow(10,$decimals),$decimals,'.',''), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"> \nCONTENT;\n$return .= htmlspecialchars( $currency, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t<br>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $options['unlimitedLang'] !== NULL ):\n$return .= <<<CONTENT\n\n\t&nbsp;\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t&nbsp;\n\t<input\n\t\ttype=\"checkbox\"\n\t\trole='checkbox'\n\t\tdata-control=\"unlimited \nCONTENT;\n\nif ( !empty($options['unlimitedTogglesOn']) OR !empty($options['unlimitedTogglesOff']) ):\n$return .= <<<CONTENT\ntoggle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"\n\t\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[__unlimited]\"\n\t\tvalue=\"1\"\n\t\t\nCONTENT;\n\nif ( $value === '*' ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\tid=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-unlimitedCheck\"\n\t\t\nCONTENT;\n\nif ( !empty($options['unlimitedTogglesOn']) ):\n$return .= <<<CONTENT\n data-togglesOn=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $options['unlimitedTogglesOn'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-controls=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $options['unlimitedTogglesOn'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !empty($options['unlimitedTogglesOff']) ):\n$return .= <<<CONTENT\n data-togglesOff=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $options['unlimitedTogglesOff'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-controls=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $options['unlimitedTogglesOff'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t> <label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-unlimitedCheck'>\nCONTENT;\n\n$val = \"{$options['unlimitedLang']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t<br>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction paymentRequestApi( $field, $gateway, $key, $country, $invoice, $currency, $amountAsCents, $amount ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller=\"nexus.global.gateways.stripepaymentrequest\" data-id=\"\nCONTENT;\n$return .= htmlspecialchars( $gateway->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-key=\"\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-country=\"\nCONTENT;\n$return .= htmlspecialchars( $country, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-currency=\"\nCONTENT;\n$return .= htmlspecialchars( $currency, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-amount=\"\nCONTENT;\n$return .= htmlspecialchars( $amount, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-amountAsCents=\"\nCONTENT;\n$return .= htmlspecialchars( $amountAsCents, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-invoice=\"\nCONTENT;\n$return .= htmlspecialchars( $invoice->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t<noscript>\n\t\t<div class=\"ipsMessage ipsMessage_error\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'card_requires_js', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<\/noscript>\n\t<div id=\"paymentrequest-\nCONTENT;\n$return .= htmlspecialchars( $field->htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction renewalTerm( $name, $value, $options ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$term = $value->getTerm();\n$return .= <<<CONTENT\n\n<div class='cNexusStack cNexusStack_usergroup'>\n\t<ol class='ipsList_reset'>\n\t\t<li data-step='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'price', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\nif ( $options['allCurrencies'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( \\IPS\\nexus\\Money::currencies() as $currency ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[amount_\nCONTENT;\n$return .= htmlspecialchars( $currency, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" size=\"4\" data-decimals=\"2\" data-decpoint=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->language()->locale['decimal_point'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-thousandsseparator=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->language()->locale['thousands_sep'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" step=\"0.01\" value=\"\nCONTENT;\n\nif ( isset( $value->cost[ $currency ] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value->cost[ $currency ]->amount, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" class=\"ipsField_short ipsField_stackItemNoMargin\"> \nCONTENT;\n$return .= htmlspecialchars( $currency, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<br>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[amount]\" size=\"4\" data-decimals=\"2\" data-decpoint=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->language()->locale['decimal_point'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-thousandsseparator=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->language()->locale['thousands_sep'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" step=\"0.01\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value->cost->amountAsString(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short ipsField_stackItemNoMargin\">\n\t\t\t\t\nCONTENT;\n\nif ( count( \\IPS\\nexus\\Money::currencies() ) === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $value->cost->currency, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[currency]\">\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( \\IPS\\nexus\\Money::currencies() as $currency ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $currency, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $currency === $value->cost->currency ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $currency, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/select>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/li>\n\t\t<li data-step='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'every', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\n\t\t\t<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[term]\" size=\"4\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $term['term'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_tiny ipsField_stackItemNoMargin\"  \nCONTENT;\n\nif ( $options['lockTerm'] ):\n$return .= <<<CONTENT\ndisabled\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[unit]\" \nCONTENT;\n\nif ( $options['lockTerm'] ):\n$return .= <<<CONTENT\ndisabled\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t<option value=\"d\" \nCONTENT;\n\nif ( $term['unit'] === 'd' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\t<option value=\"m\" \nCONTENT;\n\nif ( $term['unit'] === 'm' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'months', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\t<option value=\"y\" \nCONTENT;\n\nif ( $term['unit'] === 'y' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'years', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t<\/select>\n\t\t<\/li>\n\t\t\nCONTENT;\n\nif ( $options['addToBase'] ):\n$return .= <<<CONTENT\n\n\t\t\t<li data-step='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\n\t\t\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[add]\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_add\" \nCONTENT;\n\nif ( $value->addToBase ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_to_purchase_price', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<br>\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/ol>\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction shipping( $name, $value, $options ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $options['options'] as $id => $set ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsGrid ipsAreaBackground_light ipsPad\">\n\t\t<div class=\"ipsGrid_span7\">\n\t\t\t<h3 class='ipsType_minorHeading'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'items_in_shipment', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t<ul class='ipsDataList ipsDataList_reducedSpacing'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $set['items'] as $item ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsDataItem'>\n\t\t\t\t\t\t<div class='ipsDataItem_generic ipsDataItem_size1'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $image = $item->image() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<img src=\"\nCONTENT;\n$return .= htmlspecialchars( $image->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsImage ipsThumb_tiny'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<div class='ipsNoThumb ipsNoThumb_product ipsThumb_tiny'>&nbsp;<\/div>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t\t<h4 class='ipsType_normal ipsType_reset'>\nCONTENT;\n$return .= htmlspecialchars( $item->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( count( $item->details ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span class=\"ipsType_light\">\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $item->details as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$val = \"nexus_pfield_{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: <\/strong> \nCONTENT;\n\n$return .= \\IPS\\nexus\\Package\\CustomField::load( $k )->displayValue( $v );\n$return .= <<<CONTENT\n<br>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div class=\"ipsGrid_span5\">\n\t\t\t<h3 class='ipsType_minorHeading'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delivery_choice', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t<ul class=\"ipsField_fieldList\" role=\"radiogroup\">\n\t\t\t\t\nCONTENT;\n\nforeach ( $set['methods'] as $k => $method ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" id='elShipping_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $value[$id] == $k ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<div class=\"ipsField_fieldList_content ipsType_break\">\n\t\t\t\t\t\t\t<label for=\"elShipping_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t<span class='ipsType_medium'>\n\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\nif ( $method->getPrice( $set['items'], $options['currency'], $options['invoice'] )->amount->isZero() ):\n$return .= <<<CONTENT\n<span class='ipsType_success'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'free_shipping', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $method->getPrice( $set['items'], $options['currency'], $options['invoice'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/strong> - \nCONTENT;\n$return .= htmlspecialchars( $method->getName(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $estimatedDeliveryTime = $method->getEstimatedDelivery( $set['items'], $options['invoice'] ) ):\n$return .= <<<CONTENT\n <span class='ipsType_light'>(\nCONTENT;\n$return .= htmlspecialchars( $estimatedDeliveryTime, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)<\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<\/label>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction stateSelect( $name, $value, $unlimited=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<!-- @todo [future] Is there a better UI for this? -->\n\nCONTENT;\n\nif ( $unlimited !== NULL ):\n$return .= <<<CONTENT\n\n\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited\" value=\"1\" \nCONTENT;\n\nif ( $value === '*' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> \nCONTENT;\n\n$val = \"{$unlimited}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<br>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[]\" multiple size=\"20\">\n\t\nCONTENT;\n\nforeach ( \\IPS\\GeoLocation::$countries as $country ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( isset( \\IPS\\GeoLocation::$states[ $country ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t<optgroup label=\"\nCONTENT;\n\n$val = \"country-{$country}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\nCONTENT;\n\nforeach ( \\IPS\\GeoLocation::$states[ $country ] as $state ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $country, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-\nCONTENT;\n$return .= htmlspecialchars( $state, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $value[ $country ] ) and ( ( $value[ $country ] == \"*\" ) or ( in_array( $state, $value[ $country ] ) ) ) ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $state, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/optgroup>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $country, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $value[ $country ] ) ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$val = \"country-{$country}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/select>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction usernamePassword( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<ul class='ipsField_translatable ipsList_reset'>\n\t<li class='ipsClearfix'>\n\t\t<span class=\"ipsFlag fa fa-user\"><\/span>\n\t\t<input type='text' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[un]\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $value['un'] ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value['un'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<\/li>\n\t<li class='ipsClearfix'>\n\t\t<span class=\"ipsFlag fa fa-lock\"><\/span>\n\t\t<input type='password' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[pw]\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $value['pw'] ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value['pw'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<\/li>\n<\/ul>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction usernamePasswordDisplay( $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\n\t<ul class=\"ipsList ipsList_inline\">\n\t\t<li><i class=\"fa fa-user\"><\/i> <span class=\"ipsType_monospace\">\nCONTENT;\n$return .= htmlspecialchars( $value['un'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><\/li>\n\t\t<li><i class=\"fa fa-lock\"><\/i> <span class=\"ipsType_monospace\">\nCONTENT;\n$return .= htmlspecialchars( $value['pw'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><\/li>\n\t<\/ul>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction weight( $name, $amount=0, $unit='kg', $unlimited=NULL, $unlimitedChecked=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[amount]\" size=\"4\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $amount, 2, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short\" step=\"0.01\">\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[unit]\">\n\t<option value=\"kg\" \nCONTENT;\n\nif ( $unit == 'kg' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'kg', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"lb\" \nCONTENT;\n\nif ( $unit == 'lb' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lb', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n\nCONTENT;\n\nif ( $unlimited !== NULL ):\n$return .= <<<CONTENT\n\n\t&nbsp;\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t&nbsp;\n\t<span class='ipsCustomInput'>\n\t\t<input type=\"checkbox\" role='checkbox' data-control=\"unlimited\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[unlimited]\" value=\"1\" \nCONTENT;\n\nif ( $unlimitedChecked ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-unlimitedCheck\">\n\t\t<span><\/span>\n\t<\/span> <label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-unlimitedCheck' class='ipsField_unlimited'>\nCONTENT;\n\n$val = \"{$unlimited}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t<br>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
